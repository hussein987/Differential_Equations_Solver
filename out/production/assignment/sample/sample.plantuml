@startuml

title __SAMPLE's Class Diagram__\n

  namespace sample {
    class sample.AlertBox {
        {static} + display()
    }
  }
  

  namespace sample {
    class sample.Controller {
        ~ N : int
        ~ N0Field : TextField
        ~ NField : TextField
        ~ NField1 : TextField
        ~ NField2 : TextField
        ~ NfField : TextField
        ~ X : int
        ~ XField : TextField
        ~ XField1 : TextField
        ~ XField2 : TextField
        ~ a : int
        ~ f : BiFunction<Double, Double, Double>
        ~ function : LineChart<Double, Double>
        ~ function1 : LineChart<Double, Double>
        ~ function2 : LineChart<Double, Double>
        ~ x0 : int
        ~ x0Field : TextField
        ~ x0Field1 : TextField
        ~ x0Field2 : TextField
        ~ y0 : int
        ~ y0Field : TextField
        ~ y0Field1 : TextField
        ~ y0Field2 : TextField
        + Clear()
        + ClearError()
        + ClearErrorTotal()
        + Euler()
        + ImprovedEuler()
        + LoadChart()
        + RungeKutta()
        + eulerError()
        + eulerTotal()
        + improvedEulerError()
        + improvedEulerTotal()
        + initialize()
        + rungeKuttaError()
        + rungeKuttaTotal()
        ~ loadValues()
        ~ loadValues1()
        ~ loadValues2()
    }
  }
  

  namespace sample {
    class sample.Graph {
        + eulerSeries : Series<Double, Double>
        + eulerSeriesLocal : Series<Double, Double>
        + eulerSeriesTotal : Series<Double, Double>
        + improvedEulerSeries : Series<Double, Double>
        + improvedEulerSeriesLocal : Series<Double, Double>
        + improvedEulerSeriesTotal : Series<Double, Double>
        + rungeKuttaSeries : Series<Double, Double>
        + rungeKuttaSeriesLocal : Series<Double, Double>
        + rungeKuttaSeriesTotal : Series<Double, Double>
        + series : Series<Double, Double>
        - graph : XYChart<Double, Double>
        + Graph()
        + clear()
        + plotError()
        + plotEuler()
        + plotEulerImproved()
        + plotLine()
        + plotRungeKutta()
        + plotTotalError()
        + solveEuler()
        + solveEulerImproved()
        + solveRungeKutta()
        - plotPoint()
        - plotSeries()
    }
  }
  

  namespace sample {
    class sample.LocalErrorController {
        ~ function : LineChart<Double, Double>
        + clear()
        + initialize()
    }
  }
  

  namespace sample {
    class sample.Main {
        {static} + main()
        + start()
    }
  }
  

  sample.Controller .up.|> javafx.fxml.Initializable
  sample.Controller o-- sample.Graph : mygraph
  sample.Controller o-- sample.Graph : mygraph1
  sample.Controller o-- sample.Graph : mygraph2
  sample.LocalErrorController .up.|> javafx.fxml.Initializable
  sample.LocalErrorController o-- sample.Graph : lcoalErrorGraph
  sample.Main -up-|> javafx.application.Application


right footer


PlantUML diagram generated by SketchIt! (https://bitbucket.org/pmesmeur/sketch.it)
For more information about this tool, please contact philippe.mesmeur@gmail.com
endfooter

@enduml
